{# Reusable SEO + Social meta include (safe)
   - Never assumes `meta` exists.
   - Guards app.request usage for non-HTTP contexts.
   - Builds image/logo URLs only when a path exists.
   - Exposes `extra_meta` block for per-page additions.
#}

{% set _meta = meta is defined ? meta : {} %}

{# Site defaults (consider moving these to Twig globals) #}
{% set site_defaults = {
    title: 'XLMFISH â€” Transparency & Analytics',
    description: 'XLMFISH: transparency, analytics, and community tools for the Stellar ecosystem.',
    image: 'images/social-card.png',
    twitter_site: '@xlmfish',
    type: 'website',
    logo_image: 'images/logo.png'
} %}

{# Page values with defaults #}
{% set title = _meta.title is defined ? _meta.title : site_defaults.title %}
{% set description = _meta.description is defined ? _meta.description : site_defaults.description %}
{% set image_path = _meta.image is defined ? _meta.image : site_defaults.image %}

{# Guard request usage: app.request may be unavailable in some contexts (console, tests) #}
{% set request_uri = (app.request is defined and app.request.uri is defined) ? app.request.uri : '' %}
{% set url = _meta.url is defined ? _meta.url : request_uri %}

{# Build absolute image/logo URLs only if the helper functions and paths are available #}
{% if image_path is defined and image_path %}
  {% set image_url = (absolute_url is defined and asset is defined) ? absolute_url(asset(image_path)) : image_path %}
{% else %}
  {% set image_url = '' %}
{% endif %}

{% set og_type = _meta.type is defined ? _meta.type : site_defaults.type %}
{% set twitter_card = _meta.twitter_card is defined ? _meta.twitter_card : 'summary_large_image' %}
{% set twitter_site = _meta.twitter_site is defined ? _meta.twitter_site : site_defaults.twitter_site %}
{% set twitter_creator = _meta.twitter_creator is defined ? _meta.twitter_creator : twitter_site %}
{% set logo_image = _meta.logo_image is defined ? _meta.logo_image : site_defaults.logo_image %}

{% if logo_image is defined and logo_image %}
  {% set logo_url = (absolute_url is defined and asset is defined) ? absolute_url(asset(logo_image)) : logo_image %}
{% else %}
  {% set logo_url = '' %}
{% endif %}

<title>{{ title }}</title>
<meta name="description" content="{{ description|striptags|trim|e('html_attr') }}"/>
<meta name="robots" content="{{ _meta.robots is defined ? _meta.robots : 'index,follow' }}"/>

{# Canonical: only include when we have a URL #}
{% if url is not empty %}<link rel="canonical" href="{{ url }}"/>{% endif %}

{# Open Graph #}
<meta property="og:locale" content="{{ app.request.locale is defined ? app.request.locale : 'en_US' }}"/>
<meta property="og:type" content="{{ og_type }}"/>
<meta property="og:title" content="{{ title }}"/>
<meta property="og:description" content="{{ description|striptags|trim }}"/>
{% if url is not empty %}<meta property="og:url" content="{{ url }}"/>{% endif %}
{% if image_url %}<meta property="og:image" content="{{ image_url }}"/>{% endif %}
{% if image_url and _meta.image_width is defined %}<meta property="og:image:width" content="{{ _meta.image_width }}"/>{% endif %}
{% if image_url and _meta.image_height is defined %}<meta property="og:image:height" content="{{ _meta.image_height }}"/>{% endif %}

{# Twitter Card #}
<meta name="twitter:card" content="{{ twitter_card }}"/>
<meta name="twitter:site" content="{{ twitter_site }}"/>
<meta name="twitter:creator" content="{{ twitter_creator }}"/>
<meta name="twitter:title" content="{{ title }}"/>
<meta name="twitter:description" content="{{ description|striptags|trim }}"/>
{% if image_url %}<meta name="twitter:image" content="{{ image_url }}"/>{% endif %}

<meta name="viewport" content="width=device-width, initial-scale=1"/>

{# JSON-LD structured data (basic WebSite + Publisher) #}
{% set jsonld = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "url": (url is not empty ? url : ""),
  "name": title,
  "description": description,
  "publisher": {
    "@type": "Organization",
    "name": "XLMFISH",
    "logo": {
      "@type": "ImageObject",
      "url": (logo_url is not empty ? logo_url : "")
    }
  }
} %}

<script type="application/ld+json">{{ jsonld|json_encode(constant('JSON_UNESCAPED_SLASHES') b-or constant('JSON_PRETTY_PRINT'))|raw }}</script>

{% block extra_meta %}{% endblock %}
